<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 4.1.3" client="gradle" variant="all" version="4.1.3">

    <issue
        id="DiscouragedPrivateApi"
        message="Reflective access to setDurationScale, which is not part of the public SDK and therefore likely to change in future Android releases"
        errorLine1="    setDurationScale = ValueAnimator.class.getDeclaredMethod(&quot;setDurationScale&quot;, Float.TYPE);"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\SystemAnimations.java"
            line="98"
            column="24"/>
    </issue>

    <issue
        id="DiscouragedPrivateApi"
        message="Reflective access to getDurationScale, which is not part of the public SDK and therefore likely to change in future Android releases"
        errorLine1="    getDurationScale = ValueAnimator.class.getDeclaredMethod(&quot;getDurationScale&quot;);"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\SystemAnimations.java"
            line="101"
            column="24"/>
    </issue>

    <issue
        id="DiscouragedPrivateApi"
        message="Reflective access to setDurationScale, which is not part of the public SDK and therefore likely to change in future Android releases"
        errorLine1="    setDurationScale = ValueAnimator.class.getDeclaredMethod(&quot;setDurationScale&quot;, Float.TYPE);"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\SystemAnimations.java"
            line="102"
            column="24"/>
    </issue>

    <issue
        id="InvalidWakeLockTag"
        message="Tag name should use a unique prefix followed by a colon (found Wake up for Test). For instance `myapp:mywakelocktag`. This will help with debugging"
        errorLine1="  WakeLock wakeLock = powerManager.newWakeLock(flags, &quot;Wake up for Test&quot;);"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\DeviceUnlocker.java"
            line="48"
            column="23"/>
    </issue>

    <issue
        id="PrivateApi"
        message="Accessing internal APIs via reflection is not supported and may not work on all devices or in the future"
        errorLine1="   windowManagerStubClass = Class.forName(&quot;android.view.IWindowManager$Stub&quot;);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\SystemAnimations.java"
            line="65"
            column="29"/>
    </issue>

    <issue
        id="PrivateApi"
        message="Accessing internal APIs via reflection is not supported and may not work on all devices or in the future"
        errorLine1="   serviceManagerClass = Class.forName(&quot;android.os.ServiceManager&quot;);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\SystemAnimations.java"
            line="67"
            column="26"/>
    </issue>

    <issue
        id="PrivateApi"
        message="Accessing internal APIs via reflection is not supported and may not work on all devices or in the future"
        errorLine1="   windowManagerClass = Class.forName(&quot;android.view.IWindowManager&quot;);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\SystemAnimations.java"
            line="69"
            column="25"/>
    </issue>

    <issue
        id="PrivateApi"
        message="Accessing internal APIs via reflection is not supported and may not work on all devices or in the future"
        errorLine1="    Class&lt;?> windowManagerGlobalClass = Class.forName(&quot;android.view.WindowManagerGlobal&quot;);"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\SystemAnimations.java"
            line="77"
            column="41"/>
    </issue>

    <issue
        id="PrivateApi"
        message="Accessing internal APIs via reflection is not supported and may not work on all devices or in the future"
        errorLine1="    Class&lt;?> windowManagerGlobalClass = Class.forName(&quot;android.view.WindowManagerGlobal&quot;);"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\SystemAnimations.java"
            line="80"
            column="41"/>
    </issue>

    <issue
        id="PrivateApi"
        message="Accessing internal APIs via reflection is not supported and may not work on all devices or in the future"
        errorLine1="    Class&lt;?> viewRootImplClass = Class.forName(&quot;android.view.ViewRootImpl&quot;);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\SystemAnimations.java"
            line="83"
            column="34"/>
    </issue>

    <issue
        id="ProtectedPermissions"
        message="Permission is only granted to system apps"
        errorLine1=" &lt;uses-permission android:name=&quot;android.permission.SET_ANIMATION_SCALE&quot; />"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\AndroidManifest.xml"
            line="8"
            column="19"/>
    </issue>

    <issue
        id="QueryPermissionsNeeded"
        message="Consider adding a `&lt;queries>` declaration to your manifest when calling this \&#xA;method; see https://g.co/dev/packagevisibility for details"
        errorLine1="    return getApplicationContext().getPackageManager().queryIntentActivities(intent, flags);"
        errorLine2="                                                       ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\matchers\AndroidMatchers.java"
            line="85"
            column="56"/>
    </issue>

    <issue
        id="QueryPermissionsNeeded"
        message="As of Android 11, this method no longer returns information about all apps; \&#xA;see https://g.co/dev/packagevisibility for details"
        errorLine1="   Iterable&lt;PackageInfo> packages = context.getPackageManager().getInstalledPackages(NORMAL_PACKAGE);"
        errorLine2="                                                                ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\matchers\HasInstalledPackage.java"
            line="30"
            column="65"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="MenuItemImpl.getItemId can only be called from within the same library group prefix (referenced groupId=`androidx.appcompat` with prefix androidx from groupId=`net.twisterrob`)"
        errorLine1="    int id = ((MenuView.ItemView)view).getItemData().getItemId();"
        errorLine2="                                                     ~~~~~~~~~"
        includedVariants="debug"
        excludedVariants="release">
        <location
            file="src\main\java\net\twisterrob\android\test\espresso\EspressoExtensions.java"
            line="556"
            column="54"/>
    </issue>

    <issue
        id="WakelockTimeout"
        message="Provide a timeout when requesting a wakelock with `PowerManager.Wakelock.acquire(long timeout)`. This will ensure the OS will cleanup any wakelocks that last longer than you intend, and will save your user&apos;s battery."
        errorLine1="   wakeLock.acquire();"
        errorLine2="   ~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\DeviceUnlocker.java"
            line="50"
            column="4"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; SDK_INT is never &lt; 14"
        errorLine1="  if (VERSION.SDK_INT &lt; VERSION_CODES.ICE_CREAM_SANDWICH) {"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\espresso\idle\AllActivitiesDestroyedIdlingResource.java"
            line="21"
            column="7"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; SDK_INT is never &lt; 14"
        errorLine1="   wrapRunOnMainStrict = VERSION.SDK_INT &lt;= VERSION_CODES.GINGERBREAD_MR1;"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\junit\AndroidJUnitRunner.java"
            line="81"
            column="26"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; SDK_INT is never &lt; 14"
        errorLine1="  if (SDK_INT &lt; ICE_CREAM_SANDWICH) {"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\junit\internal\DexPathListReflection.java"
            line="88"
            column="7"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; SDK_INT is never &lt; 14"
        errorLine1="  if (SDK_INT &lt; ICE_CREAM_SANDWICH) {"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\junit\internal\DexPathListReflection.java"
            line="190"
            column="7"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; SDK_INT is never &lt; 14"
        errorLine1="   } else if (VERSION_CODES.GINGERBREAD_MR1 &lt; SDK_INT &amp;&amp; SDK_INT &lt; VERSION_CODES.ICE_CREAM_SANDWICH) {"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\SystemAnimations.java"
            line="85"
            column="58"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; SDK_INT is never &lt; 14"
        errorLine1=" private final OnAttachStateChangeListener transitionOnDetach = VERSION.SDK_INT &lt; VERSION_CODES.HONEYCOMB_MR1"
        errorLine2="                                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\espresso\idle\ToastIdlingResource.java"
            line="46"
            column="65"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="The getter return type (`float[]`) and setter parameter type (`float...`) getter and setter methods for property `scales` should have exactly the same type to allow be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1=" public float[] getScales() {"
        errorLine2="                ~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\SystemAnimations.java"
            line="184"
            column="17"/>
        <location
            file="src\main\java\net\twisterrob\android\test\SystemAnimations.java"
            line="168"
            column="14"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 1, &quot;drawerProvider&quot;, in net.twisterrob.android.test.espresso.idle.DrawerIdlingResource.DrawerIdlingResource) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1=" public DrawerIdlingResource(@NonNull ViewProvider drawerProvider, int drawerGravity) {"
        errorLine2="                                                                   ~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\espresso\idle\DrawerIdlingResource.java"
            line="47"
            column="68"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 1, &quot;drawerProvider&quot;, in net.twisterrob.android.test.espresso.idle.DrawerIdlingResource.rule) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1=" public static IdlingResourceRule rule(ViewProvider drawerProvider, @GravityFlag int gravity) {"
        errorLine2="                                                                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src\main\java\net\twisterrob\android\test\espresso\idle\DrawerIdlingResource.java"
            line="124"
            column="69"/>
    </issue>

</issues>
