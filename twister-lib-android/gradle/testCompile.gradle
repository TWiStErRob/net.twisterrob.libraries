def isAndroid = plugins.hasPlugin('com.android.application') || plugins.hasPlugin('com.android.library')

repositories {
	maven { name = 'sonatype'; url = 'https://oss.sonatype.org/content/repositories/snapshots' }
}

IncludedBuild javaProject() {
	try {
		return gradle.includedBuild("twister-libs-java")
	} catch (Exception ex) {
		ex.printStackTrace()
		// REPORT IntelliJ IDEA 2021.1.1 Gradle Sync needs this for some reason,
		// it cannot resolve twister-libs-java, even though the included build is rename everywhere correctly.
		return gradle.includedBuild("twister-lib-java")
	}
}
apply from: new File(javaProject().projectDir, "gradle/testCompile.gradle")

dependencies {
	// Replace APK's runtimeOnly sneaking into test runtime
	configurations.testRuntimeOnly.exclude module: 'twister-lib-android-slf4j'

	if (isAndroid) {
		testImplementation(libs.androidx.test.robolectric)
		testImplementation(libs.androidx.test.robolectric.multidex)
		testImplementation(libs.androidx.test.core)

//	configurations
//			.compile
//			.resolvedConfiguration
//			.resolvedArtifacts
//			.collect { it.id.componentIdentifier }
//			.grep { it instanceof ModuleComponentIdentifier }
//			.grep { it.group.startsWith("androidx.") }
//			.each { androidTestImplementation it.displayName }

		androidTestImplementation(libs.test.junit)
		androidTestImplementation(libs.test.params)
		androidTestImplementation "net.twisterrob.lib:twister-lib-hamcrest"
		androidTestImplementation "net.twisterrob.lib:twister-lib-mockito"
		androidTestImplementation(libs.test.android.mockito)
		androidTestImplementation "net.twisterrob.lib:twister-lib-junit4"
		androidTestImplementation "net.twisterrob.lib:twister-lib-test"
		androidTestImplementation(libs.test.hamcrest.junit)
		androidTestImplementation(libs.test.shazamcrest) { // assertThat(*, sameBeanAs(*))
			exclude group: 'junit'
			exclude module: 'guava'
			exclude group: 'org.json', module: 'json'
		}
//		androidTestImplementation(libs.test.android.dexmaker.mockito)
//		androidTestImplementation(libs.test.android.dexmaker)
		// Android JUnit Runner
		androidTestImplementation(libs.androidx.test.runner)
		androidTestImplementation(libs.androidx.test.junit)
		androidTestImplementation(libs.androidx.test.rules)

		// Espresso core
		androidTestImplementation(libs.androidx.test.espresso.core)
		// Espresso-contrib for DatePicker, RecyclerView, Drawer actions, Accessibility checks, CountingIdlingResource
		androidTestImplementation(libs.androidx.test.espresso.contrib)
		// Make sure to bump the version coming transitively from Espresso to the one used by the project.
		// Resolves
		// > :processDebugAndroidTestManifest
		// > [androidx.vectordrawable:vectordrawable-animated:1.0.0]
		// > P:\caches\gradle\caches\transforms-2\files-2.1\54c0e3e3a1f93b71f3e9e8caba1f6095\vectordrawable-animated-1.0.0\AndroidManifest.xml
		// > Warning: Package name 'androidx.vectordrawable' used in: androidx.vectordrawable:vectordrawable-animated:1.0.0, androidx.vectordrawable:vectordrawable:1.0.0.
		androidTestImplementation(libs.androidx.material)
		// Espresso-accessibility for automatic checking (not used yet)
		// TODO AccessibilityChecks.enable()
		//androidTestImplementation(libs.androidx.test.espresso.accessibility)
		// disable web for now, because it has some conflicting Guava classes (https://issuetracker.google.com/issues/37063389)
		// Espresso-web for WebView support (not used yet)
		//androidTestImplementation(libs.androidx.test.espresso.web)
		// Espresso-intents for capturing Intents and mocking onActivityResult
		androidTestImplementation(libs.androidx.test.espresso.intents)
		// Espresso-idling-resource for synchronization with background jobs
		androidTestImplementation(libs.androidx.test.espresso.idle)
		// CONSIDER using these with Glide
		//androidTestImplementation(libs.androidx.test.espresso.concurrent)
		//androidTestImplementation(libs.androidx.test.espresso.net)

		// UI Automator @SdkSuppress(minSdkVersion = VERSION_CODES.JELLY_BEAN_MR2)
		androidTestImplementation(libs.androidx.test.uiautomator)
	}
}
